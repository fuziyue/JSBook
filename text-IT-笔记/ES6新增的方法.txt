新增的ES6：
let : 声明变量：
			     	1. 同一个变量名，不能声明两次；
			     	2. 在预解析里面，let不会提升变量；
			     	3. 代码块，变量值会保存在代码块里面；
			  
			  	
			   const : 声明常量,声明一个常量，以后不能改变：
			  	   1. 同一个变量名，不能声明两次；
			       2. 在预解析里面，let不会提升变量；
			  	   3. 代码块，变量值会保存在代码块里面；

给变量赋值
			  		结构赋值：
			  			1. 数组方式的结果赋值
			  			2. 对象结构赋值

扩展运算符：...    ,把字符串里面的字符拆成一个个数据
			  	   
数组新方法：
			     
			     	1. map  :  循环数组
			     	
			     	api 	arr.map(function(item,i){
								console.log(item,i)
							});
			 
			  		
			        2 .Array.from(lis)  :  把类数组转换为真数组
			  		    var box = Array.from(lis)
			  
			        3. forEach()  :遍历数组 
			  			arr.forEach(function(item,i){
							console.log(item,i+1)
						})；
						
					4.数组去重：
			 			new Set(arr);	
			 
			        5.过滤数组：
			  		filter()  :  将数组进行过滤，过滤
			  					return 里面不满足条件的数据
			  					，把满足条件的放到新书组里面返回出来
			 
					6.数组some方法：  返回值是一个布尔值，循环数组，只有数组有一项数据满足判断条件
			 					整个方法返回true,没有一项满足条件，返回false;
			 
		    函数的默认参数：
			
			function fn(b,a=false){//var a = false
				//a = a||false;
				console.log(a);
			}
			fn(1,'');
			
			箭头函数：
			  			(x,y)=>{alert(x)}

			  		箭头函数的简写：
			  			(x,y)=>x+y;  不要花括号，不用写return的发布会结果
			  
			  
			 		特点 ： 箭头函数里面的this永远指向window,不能改变
			
			function fn(){}
			
			let a = (x,y)=>{alert(x)}
			
			//setInterval(function(){});
			
			setTimeout(()=>{
				//alert(3)
			},2000)
			//console.log(a)
			
			let b = (x,y)=>this;
			
			console.log(b.call(1,2));
			
			面向对象：
			
			function Fn(name,age){
				this.name = name;
				this.age = age;
			}
			
			Fn.prototype.say = function(){}
			var t = new Fn();
			
			//class  : 类      constructor : 里面只写属性
			class Person{
				constructor(name,age){  // 面向对象的属性都写在constructor
					this.name = name;   // 属性
					this.age = age;
				}
				say(){   //方法
					console.log(this)
				}
				run(){
					alert(1);
				}
			}
			
			var t2 = new Person(1,3);
			
			t2.say();