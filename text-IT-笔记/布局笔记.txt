布局时，盒子不能交叉；
        	盒模型：
        	盒模型的实际宽高：
        		宽：content（内容）+border（边框）+padding(内边距)+margin(外边距)；
        		高：同样；
        	
        	路径：
        		绝对路径：只有一条;
        		相对路径：相对自身这个文档所在的文件;
        		/：代表进入某个文件夹里的意思；
        		../：上一级目录；
        		./：当前目录；
        	
        	选择器：
        		1、标签选择器,类型选择器；div{}（全选性）
        		2、id选择器；#div1(唯一性) 在JS里面用得多
        		3、*：通配符（所有标签）；
        		4、class:类选择器（多选性）；在CSS里面用得多
        			写法：<div class="c1 b1"></div> .c1{}
        			class的值可以很多，每个值之间用空格隔开。
        		5、包含选择器（限制性）：限制起作用的范围；写法：#box .b1 p{}
        		6、分组选择器：#box,.b1{}
        		7、伪类选择器：ul:hover .li1{}

		行间样式比所有选择器的优先级都高；
        	！important(重要的意思)，在样式里加（！important）的优先级是最高的，也是最高的权重；
        	
        	终极版排名：！important > 行间样式 > #id > class > div > *

        		
        	样式：
        		link
        		a
        		img
        		backgroung-image:url（“路径”）
        	
        	a：超链接，链接到其它的页面或资源；
        		特点：1、在同一行显示；
        			2、还有下载的作用；
        			3、a标签不能自己嵌套自己；
        	
        		四个状态：
        			link:未访问状态（鼠标没出发）；
        			hover:鼠标悬浮状态；
        			active:正在访问状态；
        			visited:已访问完状态；
        		使用方法：
        			a:link{}
        			a:hover{}
        			a:active{}
        			a:visited{}
        			
        		hover:a的其它标签都有的样式；

             span:after{
        			content:"";
        			width:100%;
        			height:100%;
        			background:url；
        			display:block;
        		}
        	百分比：继承父级的百分之多少。


cursor:改变鼠标光标（要在hover伪劣才行）
        	值：pointer(手型)、move(十字架)...
        	自定义光标：cursor:url(img/.../png（最好兼容性放ico/icon的图片格式）),pointer(备胎的作用);
        	

        	img：图片；
        		百分比：继承父级宽高的多少；
        			
        	属性：
        		href:链接到资源的路径或网址；
        			链接的是一个压缩包时，a作为下载使用；
        			锚点：<a href="#id">到达</a>；（可互相链接）
        		target:_blank（窗口）,重新创建一个新窗口；
        			   _self（自己）,在当前窗口打开一个新页面；
        		#：跳转到自身页面的意思；
        	id,class,style:公共属性；
        	href,target,src:私有属性；
        	在同一行显示的标签：a,em,i,b,strong,span;
        	
        	放在hear（头部的）base标签:设置页面所有的未链接的a标签的默认地址或路径，及属性；
        	
        	优先级：
        		* < span 
        		div < .class
        		.class < #id
        			
        		* < div < .class < #id
        		
        	包含选择器的优先级：1、.div2 div > .box(优先级的叠加)；
        	数字举例：#id 100   级别之间很大很大，而且还不是具体的数字；
        		   .div 10
        		   div 1
        		   * 0.1
        	
        	vertical-align(基点位置)：
        		top:上
        		middle:中
        		bottom:下
        	
        	float（浮动）:让标签在一行显示；
        			left(左浮动):
        			right(右浮动):
        	
        	浮动范围：在父级范围内；
        	浮动开始的位置：1、当前面兄弟（同一级）标签或父级没有浮动时，开始位置在本身的位置；
        			   2、当前面兄弟（同一级）标签或父级浮动时，开始位置在兄弟标签后面；
        	
        	浮（漂浮的意思）动特点：
        		1、让所以的标签在一行显示；
        		2、只显示写出了的样式作用（任何样式）；
        		3、不会继承父级（给开发者有好的逻辑思维）；
        		4、上下margin不会重叠；
        		5、提升了层级（标签脱离文档流）；
        			文档流：标签在文档中的位置；
        		
        	clear(清除浮动)：清除浮动样式带来的影响；
        		clear:left，清除左浮动带来的影响；
        		clear:right，清除右浮动带来的影响；
        		clear:both,两个方向都清除（用得最多）；

浮动（float）：
        	目的：当父级不设置固定的高度，让父级高度由浮动的内容撑开：
        		方法：
        			1、给父级也加浮动，坏处是会影响父级下面的标签；
        			2、借用换行符<br clear="all（全部）"/>，把父级给撑开  br自带清除浮动（clear）的效果；
        			3、在浮动标签后面加一个div,给这个div清除浮动的样式（clear）只有块级标签才起作用；
        			4、伪劣；(最优)
        				before（什么之前的意思）:给某个标签里面加一个内容，内容添加到最前面，而且这个内容是可以设置样式的；
        				after(什么之后的意思)：给某个标签里面加一个内容，内容添加到最后面，而且这个内容是可以设置样式的；
        				div:after{
        					content:"内容（可写可不写）"
        					display:block;
        					clear:both;
        				}
        			
        	w3c：万维网联盟，前端原则：1、不要出现废弃（没有用）的标签；


        	嵌套原则：
        		1、超链接不能包裹超链接；
        			<a>
        				<a></a>
        			</a>
        		2、行内（内嵌）不能够包含任何块级标签；
        		3、p标签不能包任何块级标签；
        		4、h1~6标签是不能够相互包裹的；
        		5、dt标签不能包自己（因为dl里面只有一个dt）；
        	
        	注释：<!----->（-要四个以上）<>:标签的注释；
        		/*内容*/ /**/：css的注释；
        		
			书写规范：
				1、代码对齐；
				2、命名规则：
					（1）：不能是中文；
					（2）：必须是英文半角；
					（3）：id/class不能以数字开头；
					（4）：驼峰式命名：
						contentFristBox（大驼峰）
						cotent-frist-box
						cotent_frist_box(小驼峰);
					（5）：内容模块化（便于管理）；

内容溢出：内容超出了自己的范围；
				overflow:处理内容溢出；
					overflow-x:处理水平方向内容溢出；
					overflow-y:处理垂直方向内容溢出；
				overflow的值：
					none（默认）=不处理；
					hidden=隐藏溢出的文本；
					scroll=有内容溢出才会有滚动条，无内容溢出就只有滚动框，没有滚动条；
					auto=当有内容溢出时有滚动条，当无内容溢出时，没有变化；
			复合写法：overflow:auto;
				   overflow:auto hidden;
				   
			文本溢出：内容只能是文本超出了自己的范围；
				text-overflow:
					text-overflow:必须和下面的演示搭配使用才有效果；
						clip：裁剪；
						ellipsis:溢出部分变成省略号；
					overflow:scroll(值只要不是none就行);
					white-space:nowrap;
					width:限制宽度；

position(定位)：相对定位和绝对定位；
				position:relative(相对定位):
			          特点：1、相对于自身（左上角的那一点，也是原起始位置）；
					2、如果只有相对定位，没有方向值，还是在原位；
					3、同样也提升了层级；
					4、不会脱离文档流，原来位置还被霸占；
					5、当定位父级来个绝对定位（sbsolute），设置任何样式有效；

position:absolute(绝对定位)：
					特点：1、当没有指定参考点的时候，那么默认的参考点就是左上角原起始点；
						2、当指定参考点时，参考的是定位（相对和绝对都行，最近的就是父级）父级（直系，也叫就近原则）；
						3、也提升了层次，但是同一层级的元素，元素谁在文档的下边就看见谁；
						4、会脱离文档流；
						5、当定位父级来个绝对定位（sbsolute），设置任何样式有效；
						
				position:static(静态定位);

				z-index(设置标签的层级)：2（值写数字 ）；必须和定位（position）搭配才有效果；
				
				opacity（透明度）:0~1（值的范围）；0（完全透明）、1（完全不透明）；

textarea:文本域
				
				resize:拖动标签让标签的宽高发生改变；（必须和overflow搭配使用)
					horizontal:水平方向
					vertical:竖直方向
					both:两个方向都
					
					overflow:值只要不是默认值就有效果；